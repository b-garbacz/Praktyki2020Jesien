
gift_rc :[40][8]
gift_rc =[0x01, 0x03, 0x07, 0x0F, 0x1F, 0x3E, 0x3D, 0x3B, 0x37, 0x2F,
    0x1E, 0x3C, 0x39, 0x33, 0x27, 0x0E, 0x1D, 0x3A, 0x35, 0x2B,
    0x16, 0x2C, 0x18, 0x30, 0x21, 0x02, 0x05, 0x0B, 0x17, 0x2E,
    0x1C, 0x38, 0x31, 0x23, 0x06, 0x0D, 0x1B, 0x36, 0x2D, 0x1A]

key2 =[0x1 ..0x80]
ptxt2 =[0x1 ..0x80]
key =[ 0x00,0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F]
ptxt =[ 0x0,0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF]
y= [0x01,0x02,0x03,0x04]

//TODO brak Ininicjalizacji dla S

//Tablica macierz KS. 1/2 Initalization
KS = map (\x -> (head x) # (last x)) (groupBy`{2} (reverse (map reverse key)))
W0 = KS @ 0
W1 = KS @ 1
W2 = KS @ 2
W3 = KS @ 3
W4 = KS @ 4
W5 = KS @ 5
W6 = KS @ 6
W7 = KS @ 7

defKS =[[W0#W1],[W2#W3],[W4#W5],[W6#W7]]
//------Od tego momentu powinna się przemieszać runda


//everyThird xs = [x | (1,x) <- zip (cycle [1..3]) xs]

/*  
Subcells będzie gotowe do implementacji wtedy kiedy znajdę sposób na rozmieszczenie Initialization
S1 = S1 ^ (S0 && S2 )
S0 = S0 ^ (S1 && S3 )
S1 = S1 ^ (S0 || S2 )
S3 = S3 ^ S2
S1 = S1 ^ S3
S3 = ~S3
S2 = S2 ^ (S0 && S1)
BUFFOR_S = S0
S0 = S3
S3 = BUFFOR
*/

/*  TODO
PermBits
S0 =
S1 =
S2 =
S3 =
*/


/*  
AddRoundKey
S2 = S2 ^ (W2 # W3)
S1 = S1 ^ (W6 # W7)
*/

/*  TODO
Dodawanie stałej rundowej ... Dokonczyc....
XY = 
S3 = S3 ^ 0X80000000 ^gift_rc
*/

/*  KS UPDATE
BUFFOR_W6 = W6>>>2 
BUFFOR_W7 = W7>>>12
W7 = W5
W6 = W4
W5 = W3
W4 = W2
W3 = W1
W2 = W0
W1 = BUFFOR_W7
W0 = BUFFOR_W6
*/
